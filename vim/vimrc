set nocompatible              " be iMproved, required
filetype off                  " required
set encoding=UTF-8

set tabstop=2 shiftwidth=2 expandtab
" I must see the lines!!
set number
" Render whitespaces :)
set listchars=tab:..,trail:~,extends:>,precedes:<
set list
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/nerdtree'
Plugin 'xuyuanp/nerdtree-git-plugin'
Plugin 'blueshirts/darcula'
Plugin 'vim-airline/vim-airline'
Plugin 'scrooloose/nerdcommenter'
Plugin 'elzr/vim-json'
Plugin 'mattn/emmet-vim'
Plugin 'Yggdroot/indentLine'
Plugin 'yuezk/vim-js'
Plugin 'maxmellon/vim-jsx-pretty'
Plugin 'dense-analysis/ale'
Plugin 'ryanoasis/vim-devicons'
call vundle#end()

filetype plugin indent on    " required

" Open NERDTree after init
autocmd vimenter * NERDTree

" Define mapleader key
let mapleader = ","

" Highly experimental ( Might break something :( )
" I'll start mapping some useful keybinds to use (Neo)Vim as my main editor
" for everything I do

" Toggle NERDTree
nnoremap <silent> <Leader>nt :NERDTreeToggle<CR>
" Refresh NERDTree
nnoremap <silent> <Leader>nr :NERDTreeRefreshRoot<CR>
" Remove search highlight
nnoremap <silent> <Leader>us :noh<CR>

" Work with tabs
nnoremap <silent> <Leader>n :tabNew<CR>
nnoremap <silent> <Leader>] :tabnext<CR>
nnoremap <silent> <Leader>[ :tabprevious<CR>

" Search options
set ignorecase " Make search insensitive to case
set smartcase " But smart enough to find both ocurrences :)
set incsearch " Highlight matching search

" vim-arline plugin will handle linting errors
let g:airline#extensions#ale#enabled = 1

set statusline=%{FugitiveStatusline()}

syntax enable

" Use darcula as my main color scheme
colorscheme darcula

" ALE configs
let g:ale_fixers = {
  \ '*': ['remove_trailing_lines', 'trim_whitespace'],
  \ 'javascript': ['prettier', 'eslint'],
  \ 'jsx' : ['prettier', 'eslint'],
  \ 'javascript.jsx' : ['prettier', 'eslint'],
  \ 'vue': ['prettier', 'eslint'],
  \ 'javascriptreact': ['prettier-eslint', 'prettier', 'eslint'],
\ }
let g:ale_fix_on_save = 1
let g:ale_sign_error = '✕'
let g:ale_sign_warning = '•'
